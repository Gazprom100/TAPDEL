const redis = require('redis');
require('dotenv').config({ path: './.env' });

const config = {
  REDIS_URL: process.env.REDIS_URL || 'redis://localhost:6379/0'
};

async function testRedis() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis...');
  console.log(`üìã Redis URL: ${config.REDIS_URL.replace(/:[^:@]*@/, ':****@')}`);
  
  try {
    const client = redis.createClient({
      url: config.REDIS_URL,
      socket: {
        connectTimeout: 10000,
        tls: false
      },
      connectTimeout: 10000,
      lazyConnect: true,
      retryDelayOnFailover: 100,
      maxRetriesPerRequest: 3
    });
    
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis...');
    await client.connect();
    console.log('‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω');
    
    const pong = await client.ping();
    console.log(`üèì Redis ping: ${pong}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å –∏ —á—Ç–µ–Ω–∏–µ
    await client.set('test_key', 'test_value');
    const value = await client.get('test_key');
    console.log(`üìù –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏/—á—Ç–µ–Ω–∏—è: ${value}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–∏ DecimalService
    const lastBlock = await client.get('DECIMAL_LAST_BLOCK');
    const currentBlock = await client.get('DECIMAL_CURRENT_BLOCK');
    console.log(`üìä DECIMAL_LAST_BLOCK: ${lastBlock}`);
    console.log(`üìä DECIMAL_CURRENT_BLOCK: ${currentBlock}`);
    
    await client.disconnect();
    console.log('‚úÖ Redis —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis:', error);
    console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
      message: error.message,
      code: error.code,
      syscall: error.syscall
    });
  }
}

testRedis(); 