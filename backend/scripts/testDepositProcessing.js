const databaseConfig = require('../config/database');

async function testDepositProcessing() {
  try {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–†–ê–ë–û–¢–ö–ò –î–ï–ü–û–ó–ò–¢–û–í');
    console.log('=======================================');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const database = await databaseConfig.connect();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –¥–µ–ø–æ–∑–∏—Ç—ã
    const deposits = await database.collection('deposits').find({}).toArray();
    console.log(`üìã –í—Å–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ –±–∞–∑–µ: ${deposits.length}`);
    
    deposits.forEach((deposit, index) => {
      console.log(`${index + 1}. –î–µ–ø–æ–∑–∏—Ç ${deposit.amountRequested} DEL:`);
      console.log(`   –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: ${deposit.uniqueAmount} DEL`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${deposit.matched ? 'matched' : 'waiting'}`);
      console.log(`   –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${deposit.confirmations || 0}`);
      console.log(`   TX Hash: ${deposit.txHash || '–ù–µ—Ç'}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${deposit.createdAt}`);
      console.log(`   –ò—Å—Ç–µ–∫–∞–µ—Ç: ${deposit.expiresAt}`);
      console.log('');
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã
    const activeDeposits = await database.collection('deposits').find({
      matched: false,
      expiresAt: { $gt: new Date() }
    }).toArray();
    
    console.log(`üîç –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${activeDeposits.length}`);
    
    if (activeDeposits.length > 0) {
      console.log('üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã:');
      activeDeposits.forEach((deposit, index) => {
        console.log(`   ${index + 1}. ${deposit.uniqueAmount} DEL (${deposit.userId})`);
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–ª–æ–∫–æ–≤
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–ª–æ–∫–æ–≤...');
    console.log('üìä –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –Ω–æ–≤—ã–µ –±–ª–æ–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    console.log('üìã –†–∞–±–æ—á–∏–π –∞–¥—Ä–µ—Å: 0x59888c4759503AdB6d9280d71999A1Db3Cf5fb43');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏
    const usersWithDeposits = await database.collection('users').find({
      userId: { $in: deposits.map(d => d.userId) }
    }).toArray();
    
    console.log(`\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏: ${usersWithDeposits.length}`);
    usersWithDeposits.forEach((user, index) => {
      console.log(`   ${index + 1}. ${user.username || user.telegramUsername}: ${user.gameState?.tokens || 0} DEL`);
    });
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testDepositProcessing(); 