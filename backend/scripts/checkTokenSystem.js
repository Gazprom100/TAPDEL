const { connectToDatabase } = require('../config/database');
const tokenService = require('../services/tokenService');
const tokenBalanceService = require('../services/tokenBalanceService');

async function checkTokenSystem() {
  try {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –¢–û–ö–ï–ù–û–í');
    console.log('=============================');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const database = await connectToDatabase();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–û–ì–û –¢–û–ö–ï–ù–ê');
    const activeToken = await tokenService.getActiveToken();
    console.log(`ü™ô –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω: ${activeToken.symbol}`);
    console.log(`   –ê–¥—Ä–µ—Å: ${activeToken.address}`);
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${activeToken.name}`);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–æ–∫–µ–Ω—ã
    console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –¢–û–ö–ï–ù–û–í');
    const allTokens = await tokenService.getAllTokens();
    allTokens.forEach(token => {
      console.log(`   ${token.symbol}: ${token.isActive ? '–ê–ö–¢–ò–í–ï–ù' : '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω'} (${token.address})`);
    });
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–û–í –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô');
    const users = await database.collection('users').find({}).limit(3).toArray();
    for (const user of users) {
      const balance = user.gameState?.tokens || 0;
      console.log(`   ${user.userId}: ${balance} ${activeToken.symbol}`);
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç–æ–∫–µ–Ω–æ–≤
    console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ò–°–¢–û–†–ò–ò –¢–û–ö–ï–ù–û–í');
    const tokenHistory = await database.collection('token_history').find({}).sort({ changedAt: -1 }).limit(5).toArray();
    console.log(`   –ü–æ—Å–ª–µ–¥–Ω–∏–µ ${tokenHistory.length} –∏–∑–º–µ–Ω–µ–Ω–∏–π:`);
    tokenHistory.forEach(change => {
      console.log(`   ${change.changedAt.toLocaleString()}: ${change.symbol} - ${change.reason}`);
    });
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã –ø–æ —Ç–æ–∫–µ–Ω–∞–º
    console.log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–û–í –ü–û –¢–û–ö–ï–ù–ê–ú');
    if (users.length > 0) {
      const testUser = users[0];
      const tokenBalances = await tokenBalanceService.getAllUserTokenBalances(testUser.userId);
      console.log(`   –ë–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${testUser.userId}:`);
      tokenBalances.forEach(balance => {
        console.log(`     ${balance.tokenSymbol}: ${balance.balance} (–∞–∫—Ç–∏–≤–µ–Ω: ${balance.isActive})`);
      });
    }
    
    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    console.log('\n6Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API');
    const { default: fetch } = await import('node-fetch');
    
    try {
      const response = await fetch('http://localhost:3001/api/active-token');
      const data = await response.json();
      console.log(`   API –æ—Ç–≤–µ—Ç: ${JSON.stringify(data)}`);
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ API: ${error.message}`);
    }
    
    console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ç–æ–∫–µ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('\nüìã –†–ï–ó–Æ–ú–ï:');
    console.log(`   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω: ${activeToken.symbol}`);
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: ${allTokens.length}`);
    console.log(`   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${users.length}`);
    console.log(`   ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π: ${tokenHistory.length} –∑–∞–ø–∏—Å–µ–π`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
  }
}

checkTokenSystem(); 