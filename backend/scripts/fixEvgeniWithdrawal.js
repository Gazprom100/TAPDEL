const databaseConfig = require('../config/database');
const decimalService = require('../services/decimalService');

async function fixEvgeniWithdrawal() {
  try {
    console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–´–í–û–î–ê 3000 DEL');
    console.log('=================================');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const database = await databaseConfig.connect();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    
    // –ò—â–µ–º –Ω–µ—É–¥–∞—á–Ω—ã–π –≤—ã–≤–æ–¥ –Ω–∞ 3000 DEL
    const failedWithdrawal = await database.collection('withdrawals').findOne({
      userId: 'telegram-297810833',
      amount: 3000,
      status: 'failed'
    });
    
    if (!failedWithdrawal) {
      console.log('‚ùå –ù–µ—É–¥–∞—á–Ω—ã–π –≤—ã–≤–æ–¥ –Ω–∞ 3000 DEL –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω –Ω–µ—É–¥–∞—á–Ω—ã–π –≤—ã–≤–æ–¥:');
    console.log(`   ID: ${failedWithdrawal._id}`);
    console.log(`   –°—É–º–º–∞: ${failedWithdrawal.amount} DEL`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${failedWithdrawal.status}`);
    console.log(`   –û—à–∏–±–∫–∞: ${failedWithdrawal.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    console.log(`   –°–æ–∑–¥–∞–Ω: ${failedWithdrawal.createdAt}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await database.collection('users').findOne({
      userId: 'telegram-297810833'
    });
    
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:`);
    console.log(`   ID: ${user.userId}`);
    console.log(`   –ë–∞–ª–∞–Ω—Å: ${user.gameState?.tokens || 0} DEL`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Ä–∞–±–æ—á–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
    console.log('\nüí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —Ä–∞–±–æ—á–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞...');
    
    if (!decimalService.web3) {
      await decimalService.initialize();
    }
    
    const workingBalance = await decimalService.getWorkingBalance();
    console.log(`   –ë–∞–ª–∞–Ω—Å —Ä–∞–±–æ—á–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞: ${workingBalance} DEL`);
    
    if (workingBalance < 3000) {
      console.log(`   ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ù—É–∂–Ω–æ: 3000 DEL, –¥–æ—Å—Ç—É–ø–Ω–æ: ${workingBalance} DEL`);
      return;
    }
    
    console.log(`   ‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞`);
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –≤—ã–≤–æ–¥
    console.log('\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞...');
    
    const newWithdrawal = {
      userId: 'telegram-297810833',
      amount: 3000,
      address: '0xd6187dD54DF3002D5C82043b81EdE74187A5A647', // –ê–¥—Ä–µ—Å Evgeni
      status: 'queued',
      createdAt: new Date(),
      expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000) // 24 —á–∞—Å–∞
    };
    
    const result = await database.collection('withdrawals').insertOne(newWithdrawal);
    console.log(`   ‚úÖ –ù–æ–≤—ã–π –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω —Å ID: ${result.insertedId}`);
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
    console.log('\n‚ö° –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞...');
    
    try {
      const txHash = await decimalService.signAndSend(
        newWithdrawal.address,
        newWithdrawal.amount
      );
      
      if (txHash) {
        console.log(`   ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! TX Hash: ${txHash}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—ã–≤–æ–¥–∞
        await database.collection('withdrawals').updateOne(
          { _id: result.insertedId },
          {
            $set: {
              status: 'sent',
              txHash: txHash,
              sentAt: new Date()
            }
          }
        );
        
        console.log('   ‚úÖ –°—Ç–∞—Ç—É—Å –≤—ã–≤–æ–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "sent"');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const currentTokens = user.gameState?.tokens || 0;
        const newTokens = currentTokens - 3000;
        
        await database.collection('users').updateOne(
          { userId: 'telegram-297810833' },
          {
            $set: {
              "gameState.tokens": newTokens,
              "gameState.lastSaved": new Date(),
              updatedAt: new Date()
            }
          }
        );
        
        console.log(`   ‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω!`);
        console.log(`   –°—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å: ${currentTokens} DEL`);
        console.log(`   –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${newTokens} DEL`);
        console.log(`   –°–ø–∏—Å–∞–Ω–æ: -3000 DEL`);
        
      } else {
        console.log('   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
      }
      
    } catch (error) {
      console.error('   ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–≤–æ–¥–∞:', error);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ failed
      await database.collection('withdrawals').updateOne(
        { _id: result.insertedId },
        {
          $set: {
            status: 'failed',
            error: error.message,
            failedAt: new Date()
          }
        }
      );
    }
    
    console.log('\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', error);
  }
}

fixEvgeniWithdrawal(); 