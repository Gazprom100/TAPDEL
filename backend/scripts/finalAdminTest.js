async function finalAdminTest() {
  try {
    console.log('üîç –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –§–£–ù–ö–¶–ò–ô –ê–î–ú–ò–ù–ö–ò');
    console.log('=============================================');
    
    const { default: fetch } = await import('node-fetch');
    const baseUrl = 'http://localhost:3001/api';
    
    const testEndpoint = async (name, url) => {
      try {
        const response = await fetch(`${baseUrl}${url}`);
        const data = await response.json();
        
        if (response.ok && data.error !== '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω') {
          console.log(`‚úÖ ${name}: –†–∞–±–æ—Ç–∞–µ—Ç`);
          return true;
        } else {
          console.log(`‚ùå ${name}: ${data.error || '–û—à–∏–±–∫–∞'}`);
          return false;
        }
      } catch (error) {
        console.log(`‚ùå ${name}: ${error.message}`);
        return false;
      }
    };
    
    console.log('\nüìä –¢–ï–°–¢–ò–†–£–ï–ú –†–ê–ù–ï–ï –ù–ï–†–ê–ë–û–¢–ê–Æ–©–ò–ï –§–£–ù–ö–¶–ò–ò:');
    
    const tests = [
      ['–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '/admin/stats'],
      ['–°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', '/admin/system'],
      ['–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏', '/admin/economy'],
      ['–î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '/admin/users/telegram-6150470325'],
      ['–°—Ç–∞—Ç—É—Å Decimal', '/decimal/status'],
      ['–î–µ–ø–æ–∑–∏—Ç—ã Decimal', '/decimal/deposits'], 
      ['–í—ã–≤–æ–¥—ã Decimal', '/decimal/withdrawals']
    ];
    
    let passed = 0;
    let total = tests.length;
    
    for (const [name, url] of tests) {
      const success = await testEndpoint(name, url);
      if (success) passed++;
    }
    
    // –¢–µ—Å—Ç –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    try {
      const response = await fetch(`${baseUrl}/admin/users/bulk`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          operation: 'test',
          userIds: ['test-user']
        })
      });
      
      const data = await response.json();
      if (response.ok && data.message) {
        console.log(`‚úÖ –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: –†–∞–±–æ—Ç–∞—é—Ç`);
        passed++;
      } else {
        console.log(`‚ùå –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: ${data.error || '–û—à–∏–±–∫–∞'}`);
      }
    } catch (error) {
      console.log(`‚ùå –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: ${error.message}`);
    }
    total++;
    
    console.log('\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:');
    console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${passed}/${total} —Ñ—É–Ω–∫—Ü–∏–π`);
    console.log(`üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${Math.round((passed/total) * 100)}%`);
    
    if (passed === total) {
      console.log('\nüéâ –í–°–ï –†–ê–ù–ï–ï –ù–ï–†–ê–ë–û–¢–ê–Æ–©–ò–ï –§–£–ù–ö–¶–ò–ò –¢–ï–ü–ï–†–¨ –ò–°–ü–†–ê–í–õ–ï–ù–´!');
    } else {
      console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Å–µ –µ—â–µ —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞:', error);
  }
}

finalAdminTest(); 