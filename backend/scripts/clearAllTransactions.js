const { MongoClient } = require('mongodb');

async function clearAllTransactions() {
  console.log('üßπ –û–ß–ò–°–¢–ö–ê –ò–°–¢–û–†–ò–ò –í–í–û–î–û–í –ò –í–´–í–û–î–û–í –£ –í–°–ï–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô');
  console.log('==========================================================');
  
  const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/tapdel';
  
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    const client = new MongoClient(MONGODB_URI);
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    const database = client.db();
    
    // –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    console.log('\n1Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ (–≤–≤–æ–¥–æ–≤)');
    const depositsResult = await database.collection('deposits').deleteMany({});
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${depositsResult.deletedCount}`);
    
    // –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–æ–≤
    console.log('\n2Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã–≤–æ–¥–æ–≤');
    const withdrawalsResult = await database.collection('withdrawals').deleteMany({});
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤—ã–≤–æ–¥–æ–≤: ${withdrawalsResult.deletedCount}`);
    
    // –û—á–∏—Å—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –ø—Ä–æ—Ñ–∏–ª—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n3Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –ø—Ä–æ—Ñ–∏–ª—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    const usersResult = await database.collection('users').updateMany(
      {},
      { $set: { transactions: [] } }
    );
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResult.modifiedCount}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∏—Å—Ç–∫–∏');
    
    // –ü–æ–¥—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø–∏—Å–µ–π
    const remainingDeposits = await database.collection('deposits').countDocuments();
    const remainingWithdrawals = await database.collection('withdrawals').countDocuments();
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:');
    console.log(`   –î–µ–ø–æ–∑–∏—Ç—ã (–≤–≤–æ–¥—ã): ${remainingDeposits} –∑–∞–ø–∏—Å–µ–π`);
    console.log(`   –í—ã–≤–æ–¥—ã: ${remainingWithdrawals} –∑–∞–ø–∏—Å–µ–π`);
    
    if (remainingDeposits === 0 && remainingWithdrawals === 0) {
      console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!');
    } else {
      console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –æ—Å—Ç–∞–ª–∏—Å—å');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersWithTransactions = await database.collection('users').countDocuments({
      'transactions.0': { $exists: true }
    });
    
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏: ${usersWithTransactions}`);
    
    await client.close();
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
    
    console.log('\nüéâ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${depositsResult.deletedCount}`);
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤—ã–≤–æ–¥–æ–≤: ${withdrawalsResult.deletedCount}`);
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResult.modifiedCount}`);
    console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –≤–≤–æ–¥–æ–≤ –∏ –≤—ã–≤–æ–¥–æ–≤ –æ—á–∏—â–µ–Ω–∞');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  clearAllTransactions()
    .then(success => {
      if (success) {
        console.log('\nüéâ –û–ß–ò–°–¢–ö–ê –ü–†–û–®–õ–ê –£–°–ü–ï–®–ù–û!');
        console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –≤–≤–æ–¥–æ–≤ –∏ –≤—ã–≤–æ–¥–æ–≤ –æ—á–∏—â–µ–Ω–∞ —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        process.exit(0);
      } else {
        console.log('\nüí• –û–ß–ò–°–¢–ö–ê –ü–†–û–í–ê–õ–ò–õ–ê–°–¨!');
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { clearAllTransactions }; 