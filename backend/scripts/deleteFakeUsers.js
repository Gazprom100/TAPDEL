require("dotenv").config(); const { MongoClient } = require("mongodb"); async function deleteFakeUsers() { const client = new MongoClient(process.env.MONGODB_URI); try { await client.connect(); const db = client.db("tapdel"); console.log("üßπ –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."); const result = await db.collection("users").deleteMany({ $or: [ { userId: "debug_withdrawal_user" }, { userId: "api_simple_test_user" }, { userId: "web-user-736284091" }, { userId: "web-user-139471841" }, { userId: "297810833" } ] }); console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${result.deletedCount} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`); const remainingUsers = await db.collection("users").find({}).toArray(); console.log(`üìä –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${remainingUsers.length}`); console.log("üë• –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"); remainingUsers.forEach(user => { console.log(`- ${user.userId} | ${user.profile?.username || "N/A"} | @${user.profile?.telegramUsername || "N/A"} | ${user.profile?.telegramId || "N/A"}`); }); } catch (error) { console.error("‚ùå –û—à–∏–±–∫–∞:", error); } finally { await client.close(); } } deleteFakeUsers();
