const fetch = require('node-fetch');

async function checkWithdrawalStatus() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –í–´–í–û–î–ê –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì –¢–†–ê–ù–ó–ê–ö–¶–ò–ô');
  console.log('=====================================================');
  
  const withdrawalId = '6880d1c07f62fb187a3a1636'; // ID –≤—ã–≤–æ–¥–∞ 2222 DEL
  const userId = 'telegram-297810833';
  
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–≤–æ–¥–∞ 2222 DEL');
    const statusResponse = await fetch(`https://tapdel.onrender.com/api/decimal/withdrawals/${withdrawalId}`);
    
    if (statusResponse.ok) {
      const withdrawal = await statusResponse.json();
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –≤—ã–≤–æ–¥–∞:', {
        withdrawalId: withdrawal.withdrawalId,
        status: withdrawal.status,
        amount: withdrawal.amount,
        toAddress: withdrawal.toAddress,
        requestedAt: withdrawal.requestedAt,
        processedAt: withdrawal.processedAt,
        txHash: withdrawal.txHash
      });
      
      if (withdrawal.status === 'queued') {
        console.log('‚è≥ –í—ã–≤–æ–¥ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É');
      } else if (withdrawal.status === 'sent') {
        console.log('‚úÖ –í—ã–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–ª–æ–∫—á–µ–π–Ω');
        console.log(`üîó TX Hash: ${withdrawal.txHash}`);
      } else if (withdrawal.status === 'failed') {
        console.log('‚ùå –í—ã–≤–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–≤–æ–¥–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –≤—ã–≤–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –≤—ã–≤–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    const withdrawalsResponse = await fetch(`https://tapdel.onrender.com/api/decimal/users/${userId}/withdrawals`);
    
    if (withdrawalsResponse.ok) {
      const withdrawals = await withdrawalsResponse.json();
      console.log('üìã –í—Å–µ –≤—ã–≤–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', withdrawals.length, '–∑–∞–ø–∏—Å–µ–π');
      
      withdrawals.forEach((w, index) => {
        console.log(`   ${index + 1}. ID: ${w.withdrawalId}`);
        console.log(`      –°—É–º–º–∞: ${w.amount} DEL`);
        console.log(`      –°—Ç–∞—Ç—É—Å: ${w.status}`);
        console.log(`      –ê–¥—Ä–µ—Å: ${w.toAddress}`);
        console.log(`      TX Hash: ${w.txHash || '–ù–µ—Ç'}`);
        console.log(`      –ó–∞–ø—Ä–æ—à–µ–Ω: ${w.requestedAt}`);
        console.log(`      –û–±—Ä–∞–±–æ—Ç–∞–Ω: ${w.processedAt || '–ù–µ—Ç'}`);
        console.log('');
      });
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã–≤–æ–¥–æ–≤');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–ª–æ–∫—á–µ–π–Ω–∞
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–ª–æ–∫—á–µ–π–Ω–∞');
    const infoResponse = await fetch('https://tapdel.onrender.com/api/decimal/info');
    
    if (infoResponse.ok) {
      const info = await infoResponse.json();
      console.log('‚úÖ DecimalChain —Å—Ç–∞—Ç—É—Å:', {
        workingAddress: info.workingAddress,
        workingBalance: info.workingBalance,
        chainId: info.chainId,
        confirmationsRequired: info.confirmationsRequired
      });
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª–æ–∫—á–µ–π–Ω–µ');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞');
    console.log('üìã –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –∑–∞–¥–µ—Ä–∂–∫–∏:');
    console.log('   - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–ª–æ–∫—á–µ–π–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    console.log('   - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–∞–∑–∞ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
    console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å DecimalChain RPC');
    console.log('   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —Ä–∞–±–æ—á–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —Ä–∞–±–æ—á–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞');
    const balanceResponse = await fetch(`https://tapdel.onrender.com/api/decimal/users/${userId}/balance`);
    
    if (balanceResponse.ok) {
      const balance = await balanceResponse.json();
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å—ã:', {
        gameBalance: balance.gameBalance,
        workingWalletBalance: balance.workingWalletBalance
      });
      
      if (balance.workingWalletBalance < 2222) {
        console.log('‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä–∞–±–æ—á–µ–º –∫–æ—à–µ–ª—å–∫–µ –¥–ª—è –≤—ã–≤–æ–¥–∞!');
        console.log(`   –ù—É–∂–Ω–æ: 2222 DEL`);
        console.log(`   –î–æ—Å—Ç—É–ø–Ω–æ: ${balance.workingWalletBalance} DEL`);
      } else {
        console.log('‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä–∞–±–æ—á–µ–º –∫–æ—à–µ–ª—å–∫–µ');
      }
    }
    
    console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–ª–æ–∫—á–µ–π–Ω–∞ –∞–∫—Ç–∏–≤–µ–Ω');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å —Ä–∞–±–æ—á–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞');
    console.log('4. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  checkWithdrawalStatus()
    .then(success => {
      if (success) {
        console.log('\nüéâ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
        process.exit(0);
      } else {
        console.log('\nüí• –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–†–û–í–ê–õ–ò–õ–ê–°–¨!');
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { checkWithdrawalStatus }; 