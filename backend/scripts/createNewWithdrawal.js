const databaseConfig = require('../config/database');
const decimalService = require('../services/decimalService');

async function createNewWithdrawal() {
  try {
    console.log('üí∏ –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –í–´–í–û–î–ê 2222 DEL');
    console.log('=====================================');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const database = await databaseConfig.connect();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    
    const userId = 'telegram-297810833'; // Evgeni_Krasnov
    const amount = 2222;
    const toAddress = '0xd6187dD54DF3002D5C82043b81EdE74187A5A647';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await database.collection('users').findOne({ userId: userId });
    
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', user.username || user.telegramUsername);
    console.log(`üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${user.gameState?.tokens || 0} DEL`);
    
    const gameBalance = user.gameState?.tokens || 0;
    
    if (gameBalance < amount) {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞!');
      console.log(`   –ù—É–∂–Ω–æ: ${amount} DEL`);
      console.log(`   –î–æ—Å—Ç—É–ø–Ω–æ: ${gameBalance} DEL`);
      return;
    }
    
    console.log('‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞');
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await database.collection('users').updateOne(
      { userId: userId },
      { $set: { "gameState.tokens": gameBalance - amount, updatedAt: new Date() } }
    );
    
    console.log(`üí∞ –°—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å–∞–Ω—ã: -${amount} DEL`);
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥
    const withdrawal = {
      userId: userId,
      toAddress: toAddress,
      amount: amount,
      txHash: null,
      status: 'queued',
      requestedAt: new Date(),
      processedAt: null
    };
    
    const result = await database.collection('withdrawals').insertOne(withdrawal);
    
    console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω:');
    console.log(`   ID: ${result.insertedId}`);
    console.log(`   –°—É–º–º–∞: ${amount} DEL`);
    console.log(`   –ê–¥—Ä–µ—Å: ${toAddress}`);
    console.log(`   –°—Ç–∞—Ç—É—Å: queued`);
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
    console.log('\nüîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞...');
    
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DecimalService –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (!decimalService.web3) {
        await decimalService.initialize();
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
      const txHash = await decimalService.signAndSend(toAddress, amount);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await database.collection('withdrawals').updateOne(
        { _id: result.insertedId },
        {
          $set: {
            txHash: txHash,
            status: 'sent',
            processedAt: new Date()
          }
        }
      );
      
      console.log('‚úÖ –í—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!');
      console.log(`üìÑ TX Hash: ${txHash}`);
      console.log(`üí∏ –°—É–º–º–∞: ${amount} DEL`);
      console.log(`üìç –ê–¥—Ä–µ—Å: ${toAddress}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–≤–æ–¥–∞:', error);
      
      // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ failed –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞
      await database.collection('withdrawals').updateOne(
        { _id: result.insertedId },
        {
          $set: {
            status: 'failed',
            error: error.message,
            processedAt: new Date()
          }
        }
      );
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await database.collection('users').updateOne(
        { userId: userId },
        { $inc: { "gameState.tokens": amount } }
      );
      
      console.log(`üí∞ –°—Ä–µ–¥—Å—Ç–≤–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}: +${amount} DEL`);
    }
    
    console.log('\n‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞:', error);
  }
}

createNewWithdrawal(); 