const { MongoClient } = require('mongodb');
require('dotenv').config({ path: './.env' });

const config = {
  MONGODB_URI: process.env.MONGODB_URI || 'mongodb+srv://TAPDEL:fpz%25sE62KPzmHfM@cluster0.ejo8obw.mongodb.net/tapdel?retryWrites=true&w=majority&appName=Cluster0'
};

async function debugWithdrawal(withdrawalId) {
  console.log(`üîç –û—Ç–ª–∞–¥–∫–∞ –≤—ã–≤–æ–¥–∞: ${withdrawalId}`);
  
  try {
    const client = new MongoClient(config.MONGODB_URI);
    await client.connect();
    const db = client.db('tapdel');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–≤–æ–¥
    const withdrawal = await db.collection('withdrawals').findOne({
      _id: new (require('mongodb').ObjectId)(withdrawalId)
    });
    
    if (!withdrawal) {
      console.log(`‚ùå –í—ã–≤–æ–¥ ${withdrawalId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    console.log(`üìã –î–µ—Ç–∞–ª–∏ –≤—ã–≤–æ–¥–∞:`);
    console.log(`   ID: ${withdrawal._id}`);
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${withdrawal.userId}`);
    console.log(`   –°—É–º–º–∞: ${withdrawal.amount} DEL`);
    console.log(`   –ê–¥—Ä–µ—Å: ${withdrawal.toAddress}`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${withdrawal.status}`);
    console.log(`   –°–æ–∑–¥–∞–Ω: ${withdrawal.requestedAt}`);
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω: ${withdrawal.processedAt}`);
    console.log(`   TX Hash: ${withdrawal.txHash}`);
    console.log(`   –û—à–∏–±–∫–∞: ${withdrawal.error || '–ù–µ—Ç'}`);
    console.log(`   –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${withdrawal.processingStartedAt || '–ù–µ—Ç'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await db.collection('users').findOne({ userId: withdrawal.userId });
    if (user) {
      console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:`);
      console.log(`   –ë–∞–ª–∞–Ω—Å: ${user.gameState?.tokens || 0} DEL`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${user.updatedAt}`);
    } else {
      console.log(`\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${withdrawal.userId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤—ã–≤–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const allWithdrawals = await db.collection('withdrawals').find({
      userId: withdrawal.userId
    }).sort({ requestedAt: -1 }).limit(5).toArray();
    
    console.log(`\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –≤—ã–≤–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
    for (const w of allWithdrawals) {
      console.log(`   ${w.amount} DEL ‚Üí ${w.status} (${w.requestedAt})`);
    }
    
    await client.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error);
  }
}

// –ü–æ–ª—É—á–∞–µ–º ID –≤—ã–≤–æ–¥–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const withdrawalId = process.argv[2];

if (!withdrawalId) {
  console.error('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –≤—ã–≤–æ–¥–∞: node scripts/debugWithdrawal.js <withdrawalId>');
  process.exit(1);
}

debugWithdrawal(withdrawalId); 