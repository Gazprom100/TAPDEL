const fetch = require('node-fetch');

async function clearRateLimiting() {
  console.log('üßπ –°–ë–†–û–° RATE LIMITING –í REDIS');
  console.log('================================');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å rate limiting
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ rate limiting');
    
    // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –≤—ã–≤–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const testResponse = await fetch('https://tapdel.onrender.com/api/decimal/withdrawals', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: 'telegram-297810833',
        toAddress: '0x1234567890123456789012345678901234567890',
        amount: 0.1
      })
    });
    
    if (testResponse.ok) {
      console.log('‚úÖ Rate limiting —Å–±—Ä–æ—à–µ–Ω - –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤—ã–≤–æ–¥—ã');
      const withdrawal = await testResponse.json();
      console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–π –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω:', {
        withdrawalId: withdrawal.withdrawalId,
        status: withdrawal.status,
        amount: withdrawal.amount
      });
    } else {
      const error = await testResponse.text();
      console.log('‚ùå Rate limiting –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω:', error);
      
      if (error.includes('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤')) {
        console.log('‚è∞ –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å —Å–±—Ä–æ—Å–∞ rate limiting');
        console.log('üí° Rate limiting —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç');
        console.log('üîß –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å —á–µ—Ä–µ–∑ API');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–±—Ä–æ—Å–∏—Ç—å —á–µ—Ä–µ–∑ health endpoint
        const healthResponse = await fetch('https://tapdel.onrender.com/health');
        if (healthResponse.ok) {
          const health = await healthResponse.json();
          console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:', health.status);
        }
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–ø–æ–∑–∏—Ç—ã
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    const depositTestResponse = await fetch('https://tapdel.onrender.com/api/decimal/deposits', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: 'telegram-297810833',
        baseAmount: 0.001
      })
    });
    
    if (depositTestResponse.ok) {
      console.log('‚úÖ Rate limiting –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Å–±—Ä–æ—à–µ–Ω');
      const deposit = await depositTestResponse.json();
      console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç —Å–æ–∑–¥–∞–Ω:', {
        depositId: deposit.depositId,
        uniqueAmount: deposit.uniqueAmount
      });
    } else {
      const error = await depositTestResponse.text();
      console.log('‚ùå Rate limiting –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∞–∫—Ç–∏–≤–µ–Ω:', error);
    }
    
    console.log('\nüéØ –°–¢–ê–¢–£–° RATE LIMITING:');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ Rate limiting –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç —Å–ø–∞–º–∞');
    console.log('‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±—Ä–æ—Å —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç');
    console.log('üí° –í—ã–≤–æ–¥—ã –±–æ–ª—å—à–µ –ù–ï –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—Ç—Å—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏!');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ rate limiting:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±—Ä–æ—Å –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  clearRateLimiting()
    .then(success => {
      if (success) {
        console.log('\nüéâ –ü–†–û–í–ï–†–ö–ê RATE LIMITING –ó–ê–í–ï–†–®–ï–ù–ê!');
        process.exit(0);
      } else {
        console.log('\nüí• –ü–†–û–í–ï–†–ö–ê RATE LIMITING –ü–†–û–í–ê–õ–ò–õ–ê–°–¨!');
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { clearRateLimiting }; 