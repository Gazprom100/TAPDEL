const { MongoClient } = require('mongodb');
const { Web3 } = require('web3');
const config = require('../config/decimal');

async function forceProcessWithdrawal() {
  console.log('üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –í–´–í–û–î–ê');
  console.log('=====================================');
  
  const withdrawalId = '6880d1c07f62fb187a3a1636'; // ID –≤—ã–≤–æ–¥–∞ 2222 DEL
  const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/tapdel';
  
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    const client = new MongoClient(MONGODB_URI);
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    const database = client.db();
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—ã–≤–æ–¥
    console.log('\n1Ô∏è‚É£ –ü–æ–∏—Å–∫ –≤—ã–≤–æ–¥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    const withdrawal = await database.collection('withdrawals').findOne({ _id: withdrawalId });
    
    if (!withdrawal) {
      console.log('‚ùå –í—ã–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return false;
    }
    
    console.log('‚úÖ –í—ã–≤–æ–¥ –Ω–∞–π–¥–µ–Ω:', {
      withdrawalId: withdrawal._id,
      status: withdrawal.status,
      amount: withdrawal.amount,
      toAddress: withdrawal.toAddress,
      requestedAt: withdrawal.requestedAt
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if (withdrawal.status === 'sent') {
      console.log('‚úÖ –í—ã–≤–æ–¥ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–ª–æ–∫—á–µ–π–Ω');
      console.log(`üîó TX Hash: ${withdrawal.txHash}`);
      return true;
    }
    
    if (withdrawal.status === 'failed') {
      console.log('‚ùå –í—ã–≤–æ–¥ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –Ω–µ—É–¥–∞—á–Ω—ã–π');
      return false;
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
    console.log('\n2Ô∏è‚É£ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Web3
    const web3 = new Web3(config.RPC_URL);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ DecimalChain —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    const privateKey = config.getPrivateKey();
    const fromAddress = config.WORKING_ADDRESS;
    
    console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
    console.log(`   –û—Ç: ${fromAddress}`);
    console.log(`   –ö–æ–º—É: ${withdrawal.toAddress}`);
    console.log(`   –°—É–º–º–∞: ${withdrawal.amount} DEL`);
    
    // –ü–æ–ª—É—á–∞–µ–º nonce
    const nonce = await web3.eth.getTransactionCount(fromAddress, 'latest');
    console.log(`üìù Nonce: ${nonce}`);
    
    // –ü–æ–ª—É—á–∞–µ–º gas price
    const gasPrice = await web3.eth.getGasPrice();
    console.log(`‚õΩ Gas Price: ${web3.utils.fromWei(gasPrice, 'gwei')} gwei`);
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    const transaction = {
      from: web3.utils.toChecksumAddress(fromAddress),
      to: web3.utils.toChecksumAddress(withdrawal.toAddress),
      value: web3.utils.toWei(withdrawal.amount.toString(), 'ether'),
      gas: 21000, // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–∏–º–∏—Ç –≥–∞–∑–∞ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      gasPrice: gasPrice,
      nonce: nonce,
      chainId: config.CHAIN_ID
    };
    
    console.log('üìã –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', {
      from: transaction.from,
      to: transaction.to,
      value: withdrawal.amount + ' DEL',
      gas: transaction.gas,
      gasPrice: web3.utils.fromWei(gasPrice, 'gwei') + ' gwei'
    });
    
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('‚úçÔ∏è –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...');
    const signedTx = await web3.eth.accounts.signTransaction(transaction, privateKey);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –±–ª–æ–∫—á–µ–π–Ω...');
    const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);
    
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üîó TX Hash: ${receipt.transactionHash}`);
    console.log(`üìä Block Number: ${receipt.blockNumber}`);
    console.log(`‚õΩ Gas Used: ${receipt.gasUsed}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('\n3Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    await database.collection('withdrawals').updateOne(
      { _id: withdrawalId },
      {
        $set: {
          status: 'sent',
          txHash: receipt.transactionHash,
          processedAt: new Date(),
          blockNumber: receipt.blockNumber,
          gasUsed: receipt.gasUsed
        }
      }
    );
    
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å –≤—ã–≤–æ–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    
    await client.close();
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
    
    console.log('\nüéâ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log(`‚úÖ –í—ã–≤–æ–¥ ${withdrawal.amount} DEL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –∞–¥—Ä–µ—Å ${withdrawal.toAddress}`);
    console.log(`üîó TX Hash: ${receipt.transactionHash}`);
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  forceProcessWithdrawal()
    .then(success => {
      if (success) {
        console.log('\nüéâ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ü–†–û–®–õ–ê –£–°–ü–ï–®–ù–û!');
        console.log('‚úÖ 2222 DEL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–ª–æ–∫—á–µ–π–Ω');
        process.exit(0);
      } else {
        console.log('\nüí• –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ü–†–û–í–ê–õ–ò–õ–ê–°–¨!');
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { forceProcessWithdrawal }; 