// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥

// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ userId –∏–∑ localStorage (–∫–∞–∫ –≤ App.tsx)
function getCurrentUserId() {
  // –í —Ä–µ–∞–ª—å–Ω–æ–π –∏–≥—Ä–µ —ç—Ç–æ –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ localStorage
  // –Ω–æ –º—ã —Å–æ–∑–¥–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  return 'demo-user-main';
}

const userId = getCurrentUserId();
console.log('üéÆ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userId);

// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
const userData = {
  userId: userId,
  username: '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç',
  telegramFirstName: '–ï–≤–≥–µ–Ω–∏–π',
  telegramLastName: '–ö—Ä–∞—Å–Ω–æ–≤', 
  telegramUsername: 'evgenik',
  tokens: 500 // –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤ —á—Ç–æ–±—ã –±—ã—Ç—å –≤ —Ç–æ–ø–µ
};

console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥:', userData);

// –î–æ–±–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ API
fetch('http://localhost:3000/api/leaderboard', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify(userData)
})
.then(res => {
  if (!res.ok) {
    throw new Error(`HTTP ${res.status}`);
  }
  return res.json();
})
.then(data => {
  console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥!');
  
  // –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É users —Ç–æ–∂–µ
  const userFullData = {
    profile: {
      userId: userId,
      username: userData.username,
      telegramFirstName: userData.telegramFirstName,
      telegramLastName: userData.telegramLastName,
      telegramUsername: userData.telegramUsername,
      maxEnergy: 100,
      energyRecoveryRate: 1,
      maxGear: 'M',
      level: Math.floor(userData.tokens / 100) + 1,
      experience: userData.tokens,
      createdAt: new Date(),
      lastLogin: new Date()
    },
    gameState: {
      tokens: userData.tokens,
      highScore: userData.tokens,
      engineLevel: 'Mk I',
      gearboxLevel: 'L1', 
      batteryLevel: 'B1',
      hyperdriveLevel: 'H1',
      powerGridLevel: 'P1',
      lastSaved: new Date()
    }
  };
  
  return fetch(`http://localhost:3000/api/users/${userId}`, {
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(userFullData)
  });
})
.then(res => res.ok ? res.json() : Promise.reject(res))
.then(() => {
  console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É users!');
  console.log('üèÜ –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –≤ –∏–≥—Ä–µ - –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ç–æ–ø-10!');
  console.log('üí° –ï—Å–ª–∏ –Ω–µ –≤–∏–¥–∏—Ç–µ —Å–µ–±—è, –æ—á–∏—Å—Ç–∏—Ç–µ localStorage –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–≥—Ä—É');
})
.catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', err);
});
