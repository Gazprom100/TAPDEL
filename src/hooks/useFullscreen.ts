import { useEffect, useCallback } from 'react';

export const useFullscreen = () => {
  // –í—ã–∑–æ–≤ Telegram WebApp Fullscreen –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ safe-area
  useEffect(() => {
    console.log('üñ•Ô∏è useFullscreen: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...');
    
    const tg = window.Telegram?.WebApp;
    if (tg) {
      console.log('‚úÖ useFullscreen: Telegram WebApp –Ω–∞–π–¥–µ–Ω');
      console.log('üì± useFullscreen: Platform:', (tg as any).platform);
      console.log('üì± useFullscreen: Version:', (tg as any).version);
      console.log('üì± useFullscreen: Is Expanded:', (tg as any).isExpanded);
      
      try {
        console.log('üîÑ useFullscreen: –í—ã–∑—ã–≤–∞–µ–º tg.ready()...');
        tg.ready();
        console.log('‚úÖ useFullscreen: tg.ready() –≤—ã–ø–æ–ª–Ω–µ–Ω');
        
        // Safe area
        if (tg.safeAreaInset) {
          console.log('üìê useFullscreen: Safe area insets:', tg.safeAreaInset);
          document.documentElement.style.setProperty('--safe-top', `${tg.safeAreaInset.top}px`);
          document.documentElement.style.setProperty('--safe-bottom', `${tg.safeAreaInset.bottom}px`);
          console.log('‚úÖ useFullscreen: Safe area –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        } else {
          console.log('‚ö†Ô∏è useFullscreen: Safe area insets –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        }
        
        // Fullscreen
        if (typeof tg.requestFullscreen === 'function') {
          console.log('üñ•Ô∏è useFullscreen: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º...');
          const res = tg.requestFullscreen();
          if (res && typeof res.then === 'function') {
            res.then(() => {
              console.log('‚úÖ useFullscreen: –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
            }).catch((e: any) => {
              console.warn('‚ùå useFullscreen: Telegram requestFullscreen error:', e);
            });
          } else {
            console.log('‚úÖ useFullscreen: requestFullscreen –≤—ã–∑–≤–∞–Ω (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)');
          }
        } else {
          console.log('‚ö†Ô∏è useFullscreen: requestFullscreen –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        }
        
        // –†–∞—Å—à–∏—Ä—è–µ–º WebApp –µ—Å–ª–∏ –Ω–µ –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
        if (!(tg as any).isExpanded && typeof (tg as any).expand === 'function') {
          console.log('üì± useFullscreen: –†–∞—Å—à–∏—Ä—è–µ–º WebApp...');
          try {
            (tg as any).expand();
            console.log('‚úÖ useFullscreen: WebApp —Ä–∞—Å—à–∏—Ä–µ–Ω');
          } catch (e) {
            console.warn('‚ö†Ô∏è useFullscreen: –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è WebApp:', e);
          }
        }
        
      } catch (e) {
        console.error('‚ùå useFullscreen: Telegram WebApp fullscreen/init error:', e);
      }
    } else {
      console.log('‚ÑπÔ∏è useFullscreen: Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ');
    }
  }, []);

  // –í—ã—Ö–æ–¥ –∏–∑ fullscreen –¥–ª—è Telegram
  const exitFullscreen = useCallback(() => {
    const tg = window.Telegram?.WebApp;
    if (tg && typeof tg.exitFullscreen === 'function') {
      console.log('üîÑ useFullscreen: –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞');
      tg.exitFullscreen();
    }
  }, []);

  return { exitFullscreen };
}; 