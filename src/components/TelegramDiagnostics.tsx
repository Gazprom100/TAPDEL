import React, { useEffect, useState } from 'react';

interface TelegramDiagnosticInfo {
  hasTelegram: boolean;
  hasWebApp: boolean;
  platform?: string;
  version?: string;
  isExpanded?: boolean;
  user?: any;
  safeArea?: any;
  userAgent: string;
  viewport: string;
  url: string;
  referrer: string;
}

export const TelegramDiagnostics: React.FC = () => {
  const [diagnostics, setDiagnostics] = useState<TelegramDiagnosticInfo | null>(null);
  const [isVisible, setIsVisible] = useState(true);

  useEffect(() => {
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    setTimeout(() => {
      const tg = window.Telegram?.WebApp;
      
      const info: TelegramDiagnosticInfo = {
        hasTelegram: !!window.Telegram,
        hasWebApp: !!tg,
        platform: tg?.platform,
        version: tg?.version,
        isExpanded: (tg as any)?.isExpanded,
        user: tg?.initDataUnsafe?.user,
        safeArea: tg?.safeAreaInset,
        userAgent: navigator.userAgent,
        viewport: `${window.innerWidth}x${window.innerHeight}`,
        url: window.location.href,
        referrer: document.referrer
      };
      
      setDiagnostics(info);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      console.log('üìä TELEGRAM DIAGNOSTICS:', info);
    }, 1000);
  }, []);

  if (!isVisible || !diagnostics) return null;

  return (
    <div style={{
      position: 'fixed',
      top: '10px',
      left: '10px',
      right: '10px',
      backgroundColor: 'rgba(0, 0, 0, 0.95)',
      color: 'white',
      padding: '15px',
      borderRadius: '8px',
      fontSize: '12px',
      fontFamily: 'monospace',
      zIndex: 10000,
      maxHeight: '80vh',
      overflow: 'auto',
      border: '2px solid #ffcc00'
    }}>
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>
        <strong style={{ color: '#ffcc00' }}>üîç TELEGRAM WEBAPP –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê</strong>
        <button 
          onClick={() => setIsVisible(false)}
          style={{
            background: '#ff4444',
            border: 'none',
            color: 'white',
            padding: '5px 10px',
            borderRadius: '4px',
            cursor: 'pointer',
            fontSize: '10px'
          }}
        >
          –ó–∞–∫—Ä—ã—Ç—å
        </button>
      </div>

      <div style={{ marginBottom: '10px' }}>
        <div><strong>Telegram:</strong> <span style={{ color: diagnostics.hasTelegram ? '#00ff88' : '#ff4444' }}>
          {diagnostics.hasTelegram ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
        </span></div>
        
        <div><strong>WebApp:</strong> <span style={{ color: diagnostics.hasWebApp ? '#00ff88' : '#ff4444' }}>
          {diagnostics.hasWebApp ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
        </span></div>
        
        {diagnostics.platform && (
          <div><strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> <span style={{ color: '#00ff88' }}>{diagnostics.platform}</span></div>
        )}
        
        {diagnostics.version && (
          <div><strong>–í–µ—Ä—Å–∏—è:</strong> <span style={{ color: '#00ff88' }}>{diagnostics.version}</span></div>
        )}
        
        <div><strong>–†–∞–∑–≤–µ—Ä–Ω—É—Ç:</strong> <span style={{ color: diagnostics.isExpanded ? '#00ff88' : '#ffaa00' }}>
          {diagnostics.isExpanded ? '‚úÖ –î–∞' : '‚ö†Ô∏è –ù–µ—Ç'}
        </span></div>
      </div>

      {diagnostics.user && (
        <div style={{ marginBottom: '10px' }}>
          <strong style={{ color: '#ffcc00' }}>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong>
          <div>ID: {diagnostics.user.id}</div>
          <div>–ò–º—è: {diagnostics.user.first_name} {diagnostics.user.last_name}</div>
          {diagnostics.user.username && <div>Username: @{diagnostics.user.username}</div>}
        </div>
      )}

      {diagnostics.safeArea && (
        <div style={{ marginBottom: '10px' }}>
          <strong style={{ color: '#ffcc00' }}>üì± Safe Area:</strong>
          <div>Top: {diagnostics.safeArea.top}px</div>
          <div>Bottom: {diagnostics.safeArea.bottom}px</div>
          <div>Left: {diagnostics.safeArea.left}px</div>
          <div>Right: {diagnostics.safeArea.right}px</div>
        </div>
      )}

      <div style={{ marginBottom: '10px' }}>
        <strong style={{ color: '#ffcc00' }}>üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</strong>
        <div>Viewport: {diagnostics.viewport}</div>
        <div>UserAgent: {diagnostics.userAgent.substring(0, 60)}...</div>
      </div>

      <div style={{ marginBottom: '10px' }}>
        <strong style={{ color: '#ffcc00' }}>üåê –ù–∞–≤–∏–≥–∞—Ü–∏—è:</strong>
        <div>URL: {diagnostics.url}</div>
        {diagnostics.referrer && <div>Referrer: {diagnostics.referrer}</div>}
      </div>

      <div style={{ 
        backgroundColor: 'rgba(255, 204, 0, 0.1)', 
        padding: '10px', 
        borderRadius: '4px',
        marginTop: '10px'
      }}>
        <strong style={{ color: '#ffcc00' }}>‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</strong>
        <div style={{ fontSize: '11px', marginTop: '5px' }}>
          {!diagnostics.hasWebApp ? (
            <>
              <div style={{ color: '#ff4444', fontWeight: 'bold', marginBottom: '5px' }}>
                ‚ùå –û–®–ò–ë–ö–ê: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!
              </div>
              1. –ó–∞–∫—Ä–æ–π—Ç–µ —ç—Ç—É –≤–∫–ª–∞–¥–∫—É –±—Ä–∞—É–∑–µ—Ä–∞<br/>
              2. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram (—Ç–µ–ª–µ—Ñ–æ–Ω/–∫–æ–º–ø—å—é—Ç–µ—Ä)<br/>
              3. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @tapdel_bot<br/>
              4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start<br/>
              5. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üéÆ –ò–≥—Ä–∞—Ç—å TAPDEL"<br/>
              <br/>
              <strong>–ù–ï –û–¢–ö–†–´–í–ê–ô–¢–ï —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ!</strong>
            </>
          ) : (
            <>
              1. –ï—Å–ª–∏ Telegram/WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞<br/>
              2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É<br/>
              3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
            </>
          )}
        </div>
      </div>
    </div>
  );
}; 