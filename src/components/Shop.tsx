import React, { useState, useCallback } from 'react';
import { useGameStore } from '../store/gameStore';
import { useGameConfigStore } from '../store/gameConfigStore';
import { COMPONENTS } from '../types/game';

export const Shop: React.FC = () => {
  const { 
    tokens, 
    spendTokens,
    engineLevel,
    gearboxLevel,
    batteryLevel,
    hyperdriveLevel,
    powerGridLevel,
    upgradeEngine,
    upgradeGearbox,
    upgradeBattery,
    upgradeHyperdrive,
    upgradePowerGrid,
    activeTokenSymbol,
    refreshActiveToken
  } = useGameStore();

  const { config } = useGameConfigStore();
  
  const [purchaseInProgress, setPurchaseInProgress] = useState(false);
  const [purchaseAnimation, setPurchaseAnimation] = useState<string | null>(null);

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  React.useEffect(() => {
    refreshActiveToken();
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    const tokenInterval = setInterval(() => {
      refreshActiveToken();
    }, 30000);
    
    return () => {
      clearInterval(tokenInterval);
    };
  }, [refreshActiveToken]);

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ config
  const generateComponents = useCallback((componentType: string) => {
    if (!config || !config.components) {
      console.warn('‚ö†Ô∏è Config –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã');
      return [];
    }
    
    const configComponent = config.components[componentType as keyof typeof config.components];
    if (!configComponent) {
      console.warn(`‚ö†Ô∏è –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${componentType} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ`);
      return [];
    }
    
    const components = [];
    for (let i = 0; i < configComponent.maxLevel; i++) {
      const cost = configComponent.costs[i] || (configComponent.costs[configComponent.costs.length - 1] || 100) * Math.pow(2, i - configComponent.costs.length + 1);
      const bonus = configComponent.bonuses[i] || (configComponent.bonuses[configComponent.bonuses.length - 1] || 1) * Math.pow(2, i - configComponent.bonuses.length + 1);
      
      components.push({
        level: `Level ${i + 1}`,
        cost,
        bonus,
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        power: bonus,
        gear: bonus,
        efficiency: bonus,
        speedMultiplier: bonus / 10 + 1
      });
    }
    return components;
  }, [config]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –∞–ø–≥—Ä–µ–π–¥–∞
  const getNextUpgrade = useCallback((type: string, currentLevel: string) => {
    if (!config) return null;
    
    const getCurrentIndex = (array: any[], currentLevel: string) => {
      return array.findIndex(item => item.level === currentLevel);
    };

    let components: any[];
    switch (type) {
      case 'engine':
        components = generateComponents('engine');
        break;
      case 'gearbox':
        components = generateComponents('gearbox');
        break;
      case 'battery':
        components = generateComponents('battery');
        break;
      case 'hyperdrive':
        components = generateComponents('hyperdrive');
        break;
      case 'powerGrid':
        components = generateComponents('powerGrid');
        break;
      default:
        return null;
    }

    const currentIndex = getCurrentIndex(components, currentLevel);
    const nextIndex = currentIndex + 1;
    
    if (nextIndex < components.length) {
      return components[nextIndex];
    }
    
    return null; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç
  }, [generateComponents, config]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const getCurrentComponent = useCallback((type: string, currentLevel: string) => {
    if (!config) return null;
    
    let components: any[];
    switch (type) {
      case 'engine':
        components = generateComponents('engine');
        break;
      case 'gearbox':
        components = generateComponents('gearbox');
        break;
      case 'battery':
        components = generateComponents('battery');
        break;
      case 'hyperdrive':
        components = generateComponents('hyperdrive');
        break;
      case 'powerGrid':
        components = generateComponents('powerGrid');
        break;
      default:
        return null;
    }

    return components.find(item => item.level === currentLevel) || null;
  }, [generateComponents, config]);

  const handleUpgrade = async (
    type: 'engine' | 'gearbox' | 'battery' | 'hyperdrive' | 'powerGrid'
  ) => {
    const nextUpgrade = getNextUpgrade(type, 
      type === 'engine' ? engineLevel :
      type === 'gearbox' ? gearboxLevel :
      type === 'battery' ? batteryLevel :
      type === 'hyperdrive' ? hyperdriveLevel :
      powerGridLevel
    );
    
    if (!nextUpgrade) {
      alert('–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å!');
      return;
    }

    const totalBalance = tokens;
    const cost = nextUpgrade.cost;
    
    console.log(`üõí –ü–æ–ø—ã—Ç–∫–∞ –∞–ø–≥—Ä–µ–π–¥–∞ ${type} –¥–æ ${nextUpgrade.level}:`, {
      cost,
      currentBalance: totalBalance,
      purchaseInProgress,
      hasEnoughMoney: totalBalance >= cost
    });
    
    if (totalBalance < cost) {
      console.warn(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤: –Ω—É–∂–Ω–æ ${cost}, –¥–æ—Å—Ç—É–ø–Ω–æ ${totalBalance} ${activeTokenSymbol || 'DEL'}`);
      alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ù—É–∂–Ω–æ ${cost} ${activeTokenSymbol || 'DEL'}, —É –≤–∞—Å ${totalBalance} ${activeTokenSymbol || 'DEL'}`);
      return;
    }
    
    if (purchaseInProgress) {
      console.warn(`‚ùå –ü–æ–∫—É–ø–∫–∞ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ`);
      return;
    }

    try {
      console.log(`üõí –ù–∞—á–∏–Ω–∞–µ–º –∞–ø–≥—Ä–µ–π–¥ ${type} –¥–æ ${nextUpgrade.level} –∑–∞ ${cost} ${activeTokenSymbol || 'DEL'}`);
      setPurchaseInProgress(true);
      
      // –°–Ω–∞—á–∞–ª–∞ —Ç—Ä–∞—Ç–∏–º —Ç–æ–∫–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—Ö
      console.log(`üí∏ –í—ã–∑—ã–≤–∞–µ–º spendTokens(${cost}, { type: "${type}", level: "${nextUpgrade.level}" })`);
      const success = await spendTokens(cost, { type, level: nextUpgrade.level });
      console.log(`üí∏ spendTokens —Ä–µ–∑—É–ª—å—Ç–∞—Ç:`, success);
      
      if (success) {
        console.log(`‚úÖ –¢–æ–∫–µ–Ω—ã –ø–æ—Ç—Ä–∞—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ, –ø—Ä–∏–º–µ–Ω—è–µ–º –∞–ø–≥—Ä–µ–π–¥ ${type} –¥–æ ${nextUpgrade.level}`);
        setPurchaseAnimation(nextUpgrade.level);
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–ø–≥—Ä–µ–π–¥
        switch (type) {
          case 'engine':
            upgradeEngine(nextUpgrade.level);
            break;
          case 'gearbox':
            upgradeGearbox(nextUpgrade.level);
            break;
          case 'battery':
            upgradeBattery(nextUpgrade.level);
            break;
          case 'hyperdrive':
            upgradeHyperdrive(nextUpgrade.level);
            break;
          case 'powerGrid':
            upgradePowerGrid(nextUpgrade.level);
            break;
        }
        
        console.log(`üéâ –ê–ø–≥—Ä–µ–π–¥ ${type} –¥–æ ${nextUpgrade.level} –∑–∞–≤–µ—Ä—à–µ–Ω!`);
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          setPurchaseAnimation(null);
        }, 2000);
        
      } else {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç—Ä–∞—Ç–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è ${type} ${nextUpgrade.level}`);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–ø–≥—Ä–µ–π–¥–∞ ${type}:`, error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–ø–≥—Ä–µ–π–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setPurchaseInProgress(false);
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –µ—Å–ª–∏ config –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
  if (!config) {
    return (
      <div className="h-full flex items-center justify-center">
        <div className="text-center">
          <div className="cyber-spinner mb-4"></div>
          <div className="text-sm opacity-70">–ó–∞–≥—Ä—É–∑–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞...</div>
        </div>
      </div>
    );
  }

  const renderCategory = (
    type: 'engine' | 'gearbox' | 'battery' | 'hyperdrive' | 'powerGrid',
    title: string,
    currentLevel: string,
    icon: string
  ) => {
    const currentComponent = getCurrentComponent(type, currentLevel);
    const nextUpgrade = getNextUpgrade(type, currentLevel);
    const isMaxLevel = !nextUpgrade;
    const canUpgrade = nextUpgrade && tokens >= nextUpgrade.cost && !purchaseInProgress;
    const isAnimating = purchaseAnimation === nextUpgrade?.level;

    return (
      <div
        className={`p-4 sm:p-6 rounded-lg border transition-all ${
          isMaxLevel 
            ? 'border-[#00ff88] bg-[#00ff88]/20 shadow-[0_0_15px_rgba(0,255,136,0.5)]'
            : canUpgrade
            ? 'border-gray-600 hover:border-[#00ff88]/50 hover:shadow-[0_0_10px_rgba(0,255,136,0.3)]'
            : 'border-gray-700 opacity-75'
        } ${isAnimating ? 'animate-pulse shadow-[0_0_30px_rgba(0,255,136,0.8)]' : ''}`}
      >
        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <div className="flex-1 min-w-0">
            <div className="flex items-center gap-3 mb-3">
              <span className="text-2xl">{icon}</span>
              <div>
                <h3 className="text-lg sm:text-xl font-bold text-[#00ff88]">{title}</h3>
                <div className="text-sm opacity-70">
                  –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {currentLevel}
                  {isMaxLevel && <span className="text-[#00ff88] ml-2">‚úì –ú–∞–∫—Å–∏–º—É–º</span>}
                </div>
              </div>
            </div>
            
            {currentComponent && (
              <div className="space-y-1 text-sm opacity-70">
                {type === 'engine' && (
                  <>
                    <div>–ú–æ—â–Ω–æ—Å—Ç—å: {currentComponent.power} | –ö–ü–î: {currentComponent.fuelEfficiency}%</div>
                    <div>–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {currentComponent.maxTemp}¬∞C</div>
                  </>
                )}
                {type === 'gearbox' && (
                  <>
                    <div>–ü–µ—Ä–µ–¥–∞—á–∞: {currentComponent.gear} | –í—Ä–µ–º—è: {currentComponent.switchTime}–º—Å</div>
                    <div>–ü–æ—Ä–æ–≥ –ø–µ—Ä–µ–≥—Ä–µ–≤–∞: {currentComponent.overheatThreshold}¬∞C</div>
                  </>
                )}
                {type === 'battery' && (
                  <>
                    <div>–ï–º–∫–æ—Å—Ç—å: {currentComponent.capacity}% | –ó–∞—Ä—è–¥: {currentComponent.chargeRate}%/—Å–µ–∫</div>
                    <div>–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {currentComponent.maxTemp}¬∞C</div>
                  </>
                )}
                {type === 'hyperdrive' && (
                  <>
                    <div>–ú–Ω–æ–∂–∏—Ç–µ–ª—å: √ó{currentComponent.speedMultiplier} | –†–∞—Å—Ö–æ–¥: {currentComponent.energyConsumption}%/—Å–µ–∫</div>
                    <div>–ü–æ—Ä–æ–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {currentComponent.activationThreshold}%</div>
                  </>
                )}
                {type === 'powerGrid' && (
                  <div>–ú–∞–∫—Å. –Ω–∞–≥—Ä—É–∑–∫–∞: {currentComponent.maxLoad}% | –ö–ü–î: {currentComponent.efficiency}%</div>
                )}
              </div>
            )}
            
            {nextUpgrade && (
              <div className="mt-3 p-3 bg-gray-800/50 rounded border border-gray-600">
                <div className="text-sm font-medium mb-2">–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {nextUpgrade.level}</div>
                <div className="space-y-1 text-xs opacity-70">
                  {type === 'engine' && (
                    <>
                      <div>–ú–æ—â–Ω–æ—Å—Ç—å: {nextUpgrade.power} | –ö–ü–î: {nextUpgrade.fuelEfficiency}%</div>
                      <div>–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {nextUpgrade.maxTemp}¬∞C</div>
                    </>
                  )}
                  {type === 'gearbox' && (
                    <>
                      <div>–ü–µ—Ä–µ–¥–∞—á–∞: {nextUpgrade.gear} | –í—Ä–µ–º—è: {nextUpgrade.switchTime}–º—Å</div>
                      <div>–ü–æ—Ä–æ–≥ –ø–µ—Ä–µ–≥—Ä–µ–≤–∞: {nextUpgrade.overheatThreshold}¬∞C</div>
                    </>
                  )}
                  {type === 'battery' && (
                    <>
                      <div>–ï–º–∫–æ—Å—Ç—å: {nextUpgrade.capacity}% | –ó–∞—Ä—è–¥: {nextUpgrade.chargeRate}%/—Å–µ–∫</div>
                      <div>–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {nextUpgrade.maxTemp}¬∞C</div>
                    </>
                  )}
                  {type === 'hyperdrive' && (
                    <>
                      <div>–ú–Ω–æ–∂–∏—Ç–µ–ª—å: √ó{nextUpgrade.speedMultiplier} | –†–∞—Å—Ö–æ–¥: {nextUpgrade.energyConsumption}%/—Å–µ–∫</div>
                      <div>–ü–æ—Ä–æ–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {nextUpgrade.activationThreshold}%</div>
                    </>
                  )}
                  {type === 'powerGrid' && (
                    <div>–ú–∞–∫—Å. –Ω–∞–≥—Ä—É–∑–∫–∞: {nextUpgrade.maxLoad}% | –ö–ü–î: {nextUpgrade.efficiency}%</div>
                  )}
                </div>
              </div>
            )}
          </div>
          
          <button
            onClick={() => handleUpgrade(type)}
            disabled={isMaxLevel || !canUpgrade}
            className={`px-6 py-3 rounded transition-all text-sm font-medium whitespace-nowrap ${
              isMaxLevel
                ? 'bg-[#00ff88]/20 text-[#00ff88] cursor-not-allowed'
                : canUpgrade
                ? 'bg-[#00ff88] text-black hover:bg-[#00ff88]/80'
                : 'bg-gray-700 text-gray-400 cursor-not-allowed'
            }`}
            style={{
              minHeight: '48px',
              minWidth: '120px'
            }}
          >
            {isMaxLevel ? '–ú–∞–∫—Å–∏–º—É–º' : `${nextUpgrade?.cost || 0} ${activeTokenSymbol || 'DEL'}`}
          </button>
        </div>
      </div>
    );
  };

  return (
    <div 
      className="h-full overflow-y-auto overscroll-contain p-4" 
      style={{
        WebkitOverflowScrolling: 'touch',
        touchAction: 'pan-y'
      }}
    >
      <div className="space-y-6">
        {/* –î–≤–∏–≥–∞—Ç–µ–ª–∏ */}
        {renderCategory('engine', '–î–≤–∏–≥–∞—Ç–µ–ª–∏', engineLevel, 'üöÄ')}
        
        {/* –ö–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á */}
        {renderCategory('gearbox', '–ö–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á', gearboxLevel, '‚öôÔ∏è')}
        
        {/* –ë–∞—Ç–∞—Ä–µ–∏ */}
        {renderCategory('battery', '–ë–∞—Ç–∞—Ä–µ–∏', batteryLevel, 'üîã')}
        
        {/* –ì–∏–ø–µ—Ä–¥–≤–∏–≥–∞—Ç–µ–ª–∏ */}
        {renderCategory('hyperdrive', '–ì–∏–ø–µ—Ä–¥–≤–∏–≥–∞—Ç–µ–ª–∏', hyperdriveLevel, '‚ö°')}
        
        {/* –≠–Ω–µ—Ä–≥–æ—Å–µ—Ç–∏ */}
        {renderCategory('powerGrid', '–≠–Ω–µ—Ä–≥–æ—Å–µ—Ç–∏', powerGridLevel, 'üîå')}
      </div>
    </div>
  );
}; 