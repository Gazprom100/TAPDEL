const { Web3 } = require('web3');

// DecimalChain –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const RPC_URL = process.env.DECIMAL_RPC_URL || 'https://node.decimalchain.com/web3/';
const WORKING_ADDRESS = process.env.DECIMAL_WORKING_ADDRESS || '0x59888c4759503AdB6d9280d71999A1Db3Cf5fb43';

async function checkGasBalance() {
  try {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê GAS –ë–ê–õ–ê–ù–°–ê –†–ê–ë–û–ß–ï–ì–û –ö–û–®–ï–õ–¨–ö–ê');
    console.log('==========================================\n');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ DecimalChain
    const web3 = new Web3(RPC_URL);
    console.log(`üåê RPC URL: ${RPC_URL}`);
    console.log(`üíº –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: ${WORKING_ADDRESS}\n`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const blockNumber = await web3.eth.getBlockNumber();
    console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏: –±–ª–æ–∫ #${blockNumber}`);
    
    // –ü–æ–ª—É—á–∞–µ–º gas –±–∞–ª–∞–Ω—Å (–Ω–∞—Ç–∏–≤–Ω–∞—è –º–æ–Ω–µ—Ç–∞ DEL)
    const gasBalanceWei = await web3.eth.getBalance(WORKING_ADDRESS);
    const gasBalanceDEL = web3.utils.fromWei(gasBalanceWei, 'ether');
    
    console.log(`\nüí® GAS –ë–ê–õ–ê–ù–° (–Ω–∞—Ç–∏–≤–Ω—ã–π DEL):`);
    console.log(`   Wei: ${gasBalanceWei}`);
    console.log(`   DEL: ${gasBalanceDEL}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ gas –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const minGasNeeded = 0.01; // –º–∏–Ω–∏–º—É–º –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const recommendedGas = 0.1; // —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å
    
    console.log(`\nüìä –ê–ù–ê–õ–ò–ó GAS –ë–ê–õ–ê–ù–°–ê:`);
    
    if (parseFloat(gasBalanceDEL) >= recommendedGas) {
      console.log(`   ‚úÖ –û—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å gas (${gasBalanceDEL} DEL >= ${recommendedGas} DEL)`);
      console.log(`   üöÄ –ú–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º`);
    } else if (parseFloat(gasBalanceDEL) >= minGasNeeded) {
      console.log(`   ‚ö†Ô∏è  –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å gas (${gasBalanceDEL} DEL)`);
      console.log(`   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –¥–æ ${recommendedGas} DEL`);
    } else {
      console.log(`   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π gas (${gasBalanceDEL} DEL < ${minGasNeeded} DEL)`);
      console.log(`   üÜò –°–†–û–ß–ù–û –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å gas –±–∞–ª–∞–Ω—Å!`);
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const gasLimit = 21000; // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–∏–º–∏—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
    const gasPriceGwei = 50000; // –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    const gasPrice = web3.utils.toWei(gasPriceGwei.toString(), 'gwei');
    const txCostWei = BigInt(gasLimit) * BigInt(gasPrice);
    const txCostDEL = web3.utils.fromWei(txCostWei.toString(), 'ether');
    
    console.log(`\n‚õΩ –°–¢–û–ò–ú–û–°–¢–¨ –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:`);
    console.log(`   Gas Limit: ${gasLimit}`);
    console.log(`   Gas Price: ${gasPriceGwei} Gwei`);
    console.log(`   –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${txCostDEL} DEL`);
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å
    const possibleTx = Math.floor(parseFloat(gasBalanceDEL) / parseFloat(txCostDEL));
    console.log(`   –í–æ–∑–º–æ–∂–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å —Ç–µ–∫—É—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º: ${possibleTx}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º nonce (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π)
    const nonce = await web3.eth.getTransactionCount(WORKING_ADDRESS);
    console.log(`\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–®–ï–õ–¨–ö–ê:`);
    console.log(`   Nonce (–≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π): ${nonce}`);
    console.log(`   –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–ª–æ–∫: ${blockNumber}`);
    
    console.log(`\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:`);
    if (parseFloat(gasBalanceDEL) < minGasNeeded) {
      console.log(`   1. –ö–†–ò–¢–ò–ß–ù–û: –ü–æ–ø–æ–ª–Ω–∏—Ç–µ gas –±–∞–ª–∞–Ω—Å –Ω–∞ ${recommendedGas} DEL`);
      console.log(`   2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞—Ç–∏–≤–Ω—ã–µ DEL –Ω–∞ –∞–¥—Ä–µ—Å: ${WORKING_ADDRESS}`);
      console.log(`   3. –ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç –≤—ã–≤–æ–¥–∞`);
    } else if (parseFloat(gasBalanceDEL) < recommendedGas) {
      console.log(`   1. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å gas –¥–æ ${recommendedGas} DEL`);
      console.log(`   2. –¢–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Ö–≤–∞—Ç–∏—Ç –Ω–∞ ${possibleTx} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    } else {
      console.log(`   ‚úÖ Gas –±–∞–ª–∞–Ω—Å –≤ –Ω–æ—Ä–º–µ, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç—å`);
      console.log(`   üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–æ–∫`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ gas –±–∞–ª–∞–Ω—Å–∞:', error);
    console.error('\nüîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.error('   - –ü—Ä–æ–±–ª–µ–º—ã —Å RPC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º');
    console.error('   - –ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞');
    console.error('   - –°–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã');
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkGasBalance().catch(console.error); 